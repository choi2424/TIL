JSON과 JavaScript 의 object작업의 차이는 "" 하나밖에없으니까 주의할것
예 Json
{"name" : "John"}
예 JS오브젝트
{name : "John"}

다음 정보(데이터)는 문자열로 감싸주어야 한다.

function:
   {"name" : "function() {} "}
date :
  {"name" : "2023-07-21"}
undefined :
  {"name" : "undefined"}

변수는
 변수안에 데이타가 존재
 변수안에 데이타가 존재하는 기억장소의 주소가 존재


MIME type은 클라이언트와 서버간의 주고받는 파일은 파일의 확장자로 구분하는것이아니라 mime type으로 구분한다. 위키

네트워크상에서 데이터를 주고받을때 그데이터를 식별 하는데 사용하는것이 mime type이다

예
application/javascript
application/jjson 
등등 

작업을할때 확인하고 싶은것이 있으면 console.log를 이용해서 중간중간에 확인해봐라

JSON.parse() : json문자를 js문자로 바꿔줌

예)
const text = '["Ford","BMW","Audi","Fiat"]' 

const myArr = JSON.parse(text); // const text = ["ford","BMW","Audi","Fiat"]

JSON.stringify() : js문자를 json문자로 변환해줌
예)
const obj = {name : "홍길동" , today : new Date() , country : "대한민국"};
        const myJOSN = JSON.stringify(obj); //
결과 myJOSN은 {"name":"홍길동","today":"2023-07-21T05:24:14.859Z","country":"대한민국"} 로 변환

object 객체안에 functrion()이 있을경우 json문자열로 변환하면 제거된다
이런 특징떄문에 펑션함수를 json문자열로 처리하고싶으면 문자열로 바꿔줘야한다
예)
const obj = {name : "홍길동" , age : function(){return 30;} , country : "대한민국"};
obj.age = obj.age.toString();  
const myJOSN = JSON.stringify(obj);

Ajax 
Ajax : Async(비동기화) , JavaScript, Xml->json
핵심객체 : XMLHttpRequest객체
개요 : 웹페이지 내용에 대한 부분업테이트 기술

작업 :  1) 웹서버로부터 데이터 읽어오기 - 페이지가 로드된 이후
         2) 시작페이지를 다시 로드하지 않고, 웹페이지의 일부분을 업데이트
         3) 백그라운드로  웹서버에 데이터 보내기.

예전에는 XMLHttpRequest 많이썼지만 요즘은 fetch() 를 많이씀